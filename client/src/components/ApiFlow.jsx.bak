import { useEffect, useState } from 'react';
import mermaid from 'mermaid';

mermaid.initialize({ startOnLoad: false, securityLevel: 'loose', theme: 'default' });

export default function ApiFlow() {
  const [tab, setTab] = useState('flow');
  const [svg, setSvg] = useState('');
  const [err, setErr] = useState('');

  // ✅ Simpler, safe IDs
  const flowChart = `flowchart LR
    A[Client UI (React)]
    B[API (Express)]
    C[(Postgres)]
  
    A --> B
    B --> C
    A -.-> C
  `;

  const sequence = `sequenceDiagram
    participant U as User (Browser)
    participant C as Client UI (React)
    participant A as API (Express)
    participant D as DB (Postgres)

    U->>C: Open the app
    C->>A: GET /api/employees?q=eng
    A->>D: SELECT ... ILIKE '%eng%'
    D-->>A: rows
    A-->>C: 200 OK (JSON)
    C-->>U: Render table

    U->>C: Submit form (first_name, last_name, ...)
    C->>A: POST /api/employees (JSON)
    A->>D: INSERT (NULLIF on empty dates)
    D-->>A: RETURNING *
    A-->>C: 201 Created (JSON)
    C-->>U: Show updated list
  `;

  useEffect(() => {
    const render = async () => {
      try {
        setErr('');
        const def = tab === 'flow' ? flowChart.trim() : sequence.trim();

        // Validate first to avoid Mermaid crash
        mermaid.parse(def);


        const { svg } = await mermaid.render(`graph-${tab}`, def);
        setSvg(svg);
      } catch (e) {
        console.error('Mermaid error:', e);
        setSvg('');
        setErr('Mermaid syntax error – check the diagram definition.');
      }
    };
    render();
  }, [tab]);

  return (
    <div className="space-y-4">
      <div className="flex gap-2">
        <button
          onClick={() => setTab('flow')}
          className={`px-3 py-2 rounded-xl text-sm shadow ${tab === 'flow' ? 'bg-gray-900 text-white' : 'bg-white text-gray-900'}`}
        >
          System Flow
        </button>
        <button
          onClick={() => setTab('sequence')}
          className={`px-3 py-2 rounded-xl text-sm shadow ${tab === 'sequence' ? 'bg-gray-900 text-white' : 'bg-white text-gray-900'}`}
        >
          Sequence
        </button>
      </div>

      <div className="rounded-2xl bg-white shadow p-4 overflow-auto">
        {err ? (
          <div className="text-red-600 text-sm">{err}</div>
        ) : (
          <div dangerouslySetInnerHTML={{ __html: svg }} />
        )}
      </div>

      <p className="text-sm text-gray-500">
        This diagram is generated with Mermaid and reflects the actual endpoints used in this app.
      </p>
    </div>
  );
}

